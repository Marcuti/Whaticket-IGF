"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const read_importer_manifest_1 = require("@pnpm/read-importer-manifest");
const supi_1 = require("supi");
const createStoreController_1 = require("../createStoreController");
const findWorkspacePackages_1 = require("../findWorkspacePackages");
async function uninstallCmd(input, opts) {
    const store = await createStoreController_1.default(opts);
    const uninstallOpts = Object.assign(opts, {
        store: store.path,
        storeController: store.ctrl,
    });
    if (opts.lockfileDirectory === opts.prefix) {
        const { manifest, writeImporterManifest } = await read_importer_manifest_1.default(opts.prefix);
        const newManifest = await supi_1.uninstall(manifest, input, uninstallOpts);
        await writeImporterManifest(newManifest);
        return;
    }
    uninstallOpts['localPackages'] = opts.linkWorkspacePackages && opts.workspacePrefix
        ? findWorkspacePackages_1.arrayOfLocalPackagesToMap(await findWorkspacePackages_1.default(opts.workspacePrefix))
        : undefined;
    const currentManifest = await read_importer_manifest_1.default(opts.prefix);
    const [mutationResult] = await supi_1.mutateModules([
        {
            bin: opts.bin,
            dependencyNames: input,
            manifest: currentManifest.manifest,
            mutation: 'uninstallSome',
            prefix: opts.prefix,
        },
    ], uninstallOpts);
    await currentManifest.writeImporterManifest(mutationResult.manifest);
}
exports.default = uninstallCmd;
//# sourceMappingURL=uninstall.js.map