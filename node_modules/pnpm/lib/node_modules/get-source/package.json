{
  "_args": [
    [
      {
        "raw": "get-source@^1.0.32",
        "scope": null,
        "escapedName": "get-source",
        "name": "get-source",
        "rawSpec": "^1.0.32",
        "spec": ">=1.0.32 <2.0.0",
        "type": "range"
      },
      "/home/zoltan/src/pnpm/pnpm/packages/pnpm/node_modules/stacktracey"
    ]
  ],
  "_from": "get-source@^1.0.32",
  "_hasShrinkwrap": false,
  "_id": "get-source@1.0.34",
  "_location": "/get-source",
  "_nodeVersion": "8.16.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/get-source_1.0.34_1557842607606_0.14409803845014912"
  },
  "_npmUser": {
    "name": "xpl",
    "email": "rocket.mind@gmail.com"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "get-source@^1.0.32",
    "scope": null,
    "escapedName": "get-source",
    "name": "get-source",
    "rawSpec": "^1.0.32",
    "spec": ">=1.0.32 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/stacktracey"
  ],
  "_resolved": "https://registry.npmjs.org/get-source/-/get-source-1.0.34.tgz",
  "_shasum": "3dddada4c1465a54317309d3057edf18c7f93685",
  "_shrinkwrap": null,
  "_spec": "get-source@^1.0.32",
  "_where": "/home/zoltan/src/pnpm/pnpm/packages/pnpm/node_modules/stacktracey",
  "author": {
    "name": "Vitaly Gordon",
    "email": "rocket.mind@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/xpl/get-source/issues"
  },
  "dependencies": {
    "data-uri-to-buffer": "^2.0.0",
    "source-map": "^0.6.1"
  },
  "description": "Platform-agnostic source code inspection, with sourcemaps support",
  "devDependencies": {
    "chai": "^3.5.0",
    "chromedriver": "^2.46.0",
    "coveralls": "^3.0.3",
    "istanbul": "^0.4.5",
    "memory-fs": "^0.3.0",
    "mocha": "^6.0.2",
    "nyc": "^13.3.0",
    "selenium-webdriver": "^3.6.0",
    "webpack": "^3.12.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-4qjtlKu08QOtPGzDDZ+4HyADWLr4LSv07Jc5mfVDaU62z/fdyUxnNneNmEW1xz3Nq0OtGB866fjSMGnDhksgKg==",
    "shasum": "3dddada4c1465a54317309d3057edf18c7f93685",
    "tarball": "https://registry.npmjs.org/get-source/-/get-source-1.0.34.tgz",
    "fileCount": 20,
    "unpackedSize": 26282,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc2sqxCRA9TVsSAnZWagAAHpgP/jwWT7czsV2IrTopbgNg\ni3RInkySKf1jb46Ecy/PCzKCimJeX3GC0PYSJTYlwXOUH5yNjAtcU7jVRQcD\nDhMGF4Ufp679epIzxMsq9RIDNyBETTPbuizVWstYCairVMkE33NjWaseTkUs\nvo5S8FACEBj4AjXDyTBSZj52rKL8KOIj6yia77rwTnd58Ov02mo9Msw6DQyS\nUrRKgYVcDi+Hu1Y2iHbPefpt6rtkeBTxCELoCeVxA9pYFMYfvnP8rEoFzaa+\n4cHSjbCHvg1B7q1ZJlXH6G1DaNH5F3my48LmdUdKco4xPfMgMH1hbS1Vh4QG\nkXAfGipwjwnOTfpS4IybhWkjk+ADd23XQR2rbInX6ZILHccBfWi/EzAArGZi\n6v3bIE6dyi/f6V7WU6CCcyI7bEFG8luaR7KnzZN0gmhC7JoKK3ESHv7Rvnym\neAS+BeR35V6UAeQVGvC6HAg5BJjMw+mYurXB01LDCt0Tvx0p5uQB4JEX8v5q\nZLAOQ0r+Cz9EPfJDmmdza1XsrInPtGnjCTe6SWgsRJyl63wUJPKJqoWYjhH5\n/8jKWqYDeB96m7+QWTKQqs0nCT1nVV8TabAHQrmjZTilvwM53E6c9EnXvAd+\nPdTlR0Xlq62VDZWmjlNnm2jGbG5FsgYkrVIodTtWvZFg9vVDs4nXqYQDe2va\n7VS2\r\n=ajhs\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "9b78f4aff1c517b9e42537a111482579fbbab79e",
  "homepage": "https://github.com/xpl/get-source",
  "keywords": [
    "sources",
    "sourcemap",
    "read source",
    "cached sources"
  ],
  "license": "Unlicense",
  "main": "get-source",
  "maintainers": [
    {
      "name": "x84",
      "email": "igor.kroitor@gmail.com"
    },
    {
      "name": "xpl",
      "email": "rocket.mind@gmail.com"
    }
  ],
  "name": "get-source",
  "optionalDependencies": {},
  "readme": "# get-source\n\n[![Build Status](https://travis-ci.org/xpl/get-source.svg?branch=master)](https://travis-ci.org/xpl/get-source) [![Coverage Status](https://coveralls.io/repos/github/xpl/get-source/badge.svg)](https://coveralls.io/github/xpl/get-source) [![npm](https://img.shields.io/npm/v/get-source.svg)](https://npmjs.com/package/get-source)\n\nPlatform-agnostic source code inspection, with sourcemaps support.\n\n```bash\nnpm install get-source\n```\n\n## Features\n\n- [x] Allows to read source code files in Node and browsers\n- [x] Full sourcemap support (path resolving, external/embedded/inline linking, and long chains)\n- [x] **Synchronous** API â€” which is good when you implement a debugging tool (e.g. [logging](https://github.com/xpl/ololog))\n- [x] Built-in cache\n\n## What for\n\n- [x] Call stacks enhanced with source code information (see the [StackTracey](https://github.com/xpl/stacktracey) library)\n- [x] [Advanced logging](https://github.com/xpl/ololog) / assertion printing\n- [x] [Error displaying components](https://github.com/xpl/panic-overlay) for front-end web development\n\n## Usage\n\n```javascript\ngetSource = require ('get-source')\n```\n```javascript\nfile = getSource ('./scripts/index.min.js')\n```\n\nWill read the file synchronously (either via XHR or by filesystem API, depending on the environment) and return it's cached representation. Result will contain the following fields:\n\n```javascript\nfile.path  // normalized file path\nfile.text  // text contents\nfile.lines // array of lines\n```\n\nAnd the `resolve` method:\n\n```javascript\nfile.resolve ({ line: 1, column: 8 }) // indexes here start from 1 (by widely accepted convention). Zero indexes are invalid.\n```\n\nIt will look through the sourcemap chain, returning following:\n\n```javascript\n{\n   line:       <original line number>,\n   column:     <original column number>,\n   sourceFile: <original source file object>,\n   sourceLine: <original source line text>\n}\n```\n\nIn that returned object, `sourceFile` is the same kind of object that `getSource` returns. So you can access its `text`, `lines` and `path` fields to obtain the full information. And the `sourceLine` is returned just for the convenience, as a shortcut.\n\n## Error handling\n\n```javascript\nnonsense = getSource ('/some/nonexistent/file')\n\nnonsense.text  // should be '' (so it's safe to access without checking)\nnonsense.error // should be an Error object, representing an actual error thrown during reading/parsing\n```\n```javascript\nresolved = nonsense.resolve ({ line: 5, column: 0 })\n\nresolved.sourceLine // empty string (so it's safe to access without checking)\nresolved.error      // should be an Error object, representing an actual error thrown during reading/parsing\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/xpl/get-source.git"
  },
  "scripts": {
    "coveralls": "nyc report --reporter=text-lcov | coveralls",
    "test": "nyc --reporter=html --reporter=text mocha test/test.path test/test.node --reporter spec",
    "test-browser": "mocha test/test.browser --reporter spec"
  },
  "version": "1.0.34"
}
